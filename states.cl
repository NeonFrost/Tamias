(defstruct state
  (loops '((:top '())))
  (keys '((:down '())
	  (:up '())))
  (mouse '((:down '())
	   (:up '())
	   (:move '())))
  (transition t)
  (render-list '()))
(defmacro add-substate (state sub-state)
  `(push (list ,sub-state '()) (state-loops ,state)))
(defmacro add-loop (state loop)
  `(push (list ,loop '()) (state-loops ,state)))
(defmacro add-to-state-render (function-name state)
  `(setf (state-render-list ,state) (append (state-render-list ,state) (list (quote ,function-name)))))
(defmacro add-key (key state key-state &rest function-name)
  `(push (list ,key `,(quote ,function-name)) (cadr (assoc ,key-state (state-keys ,state)))))
(defmacro add-substate-function (state sub-state function-name)
  `(push (quote ,function-name) (cadr (assoc ,sub-state (state-loops ,state)))))
(defmacro add-loop-function (state sub-state function-name)
  `(push (quote ,function-name) (cadr (assoc ,sub-state (state-loops ,state)))))
(defmacro add-mouse (mouse-button state mouse-state function-name)
  `(if ,mouse-button
       (push (list ,mouse-button (quote ,function-name)) (cadr (assoc ,mouse-state (state-mouse ,state))))
       (push (quote ,function-name) (cadr (assoc :move (state-mouse ,state))))))

(defvar title (make-state :loops '((:top nil) (:options nil))))
(defvar equipment (make-state :loops '((:items nil) (:armor nil) (:weapons nil)) :transition nil))
(defvar level (make-state))
(defvar game-over (make-state))
(defvar paused (make-state :transition nil))
